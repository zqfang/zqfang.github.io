<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Coding - Category - My Computational Genomic Playground</title><link>https://zqfang.github.io/categories/coding/</link><description>Coding - Category - My Computational Genomic Playground</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 31 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://zqfang.github.io/categories/coding/" rel="self" type="application/rss+xml"/><item><title>C++ Notes</title><link>https://zqfang.github.io/2020-05-31-code-cpp-notes/</link><pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-05-31-code-cpp-notes/</guid><description>C++ Notes Just some C/C++ code snippets to keep in mind. C/C++ is tremendous complicated, but it&amp;rsquo;s extremely powerful.
Table of Contents char to Int
Pointer
Return Reference
Array as Argument
Object Instantization
Const
Friend
Design Pattern
Singleton Delegate Char to Int 1. Char is ASCII C store Char as ASCII by default.</description></item><item><title>Pointer in UnSafe Swift</title><link>https://zqfang.github.io/2020-06-03-code-unsafe-pointer-swift/</link><pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-06-03-code-unsafe-pointer-swift/</guid><description><![CDATA[Pointers Unsafe Swift pointers use a predictable naming scheme:
Unsafe [Mutable][Raw][Buffer]Pointer[&lt;T&gt;]
Explain:
Pointers are just memory addresses.
Direct memory access is Unsafe.
Mutable means you can write to it.
Raw means it points to a blob of bytes.
Buffer means that is works like a collection.
Generic [&lt;T&gt;] pointers are typed.]]></description></item><item><title>Swift Cheat Sheet</title><link>https://zqfang.github.io/2020-05-30-code-swift-cheat-sheet/</link><pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-05-30-code-swift-cheat-sheet/</guid><description>Swift Cheat Sheet Stolen from iwasrobbed.
I simplify it and add some more.
It&amp;rsquo;s a high level and a quick reference to Swift. The purpose of this cheat sheet is to teach myself and get answers within 10s.
Table of Contents Code Document Data Types Operators Operator Overloading Declaring Classes Declarations Lazy Property Property Observer Literals Functions Constants and Variables Naming Conventions Closures Generics Control Statements Extension Protocol Protocol Extension Error Handling Passing Information User Defaults Common Patterns Unicode Support File IO Code Documentation Two ways of commenting:</description></item></channel></rss>