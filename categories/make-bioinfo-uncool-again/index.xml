<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Make bioinfo uncool again - Category - My Computational Genomic Playground</title><link>https://zqfang.github.io/categories/make-bioinfo-uncool-again/</link><description>Make bioinfo uncool again - Category - My Computational Genomic Playground</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 16 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://zqfang.github.io/categories/make-bioinfo-uncool-again/" rel="self" type="application/rss+xml"/><item><title>Deploy IGV webapp on linux server</title><link>https://zqfang.github.io/2020-11-16-igvweb/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-11-16-igvweb/</guid><description>Config IGV on the server.
I have to share the inteactive results with my colleague. But I don&amp;rsquo;t like to install UCSC genomebrower in local. Instead, a light-weight one is what I need.
1. Installation Install nodejs if you have conda, just
1 conda install -c conda-forge nodejs build igv-webapp 1 2 3 4 git clone https://github.</description></item><item><title>Deploy snakemake pipeline on HPC</title><link>https://zqfang.github.io/2020-08-19-hpc-snakemake/</link><pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-08-19-hpc-snakemake/</guid><description>The best part of snakemake is allowed you to run your pipeline on HPC automatically. It save you a lot of time.
How to run snakemake on HPC there are two ways to configure
use --cluster: works on different HPC system, e.g. slurm, SGE. assign resource in params directive explicitly.</description></item><item><title>Convert Seurat to Scanpy h5ad</title><link>https://zqfang.github.io/2020-04-28-seurat2scanpy/</link><pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-04-28-seurat2scanpy/</guid><description><![CDATA[IMPORTANT UPDDATE: 2023-02-21 Best
Refer to MuDataSeurat
1 2 3 4 5  # single modality MuDataSeurat::WriteH5AD(srt, &#34;srt.h5ad&#34;) # multi modality MuDataSeurat::WriteH5MU(srt, &#34;srt.h5mu&#34;)    ReadH5AD(): Read an .h5mu file and create a Seurat object. ReadH5MU(): Create a Seurat object from .h5mu file contents WriteH5AD(): Write one assay to .]]></description></item><item><title>GATK for inbred mouse</title><link>https://zqfang.github.io/2020-03-10-gatk4-mm10-bundle/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-03-10-gatk4-mm10-bundle/</guid><description>GATK is design for human genetics, but it also work well for inbred mice.
However, one of my colleague who studies mouse genetics, said,
I tried the haplotype caller from GATK. But it seems that the haplotype caller is designed for heterogeneous genome like human than for mice. Therefore, the result coming out of HC is worse than samtools, as I manually inspected a few regions that HC calls didn&amp;rsquo;t make sense.</description></item><item><title>Cheatsheet for command line</title><link>https://zqfang.github.io/2020-01-20-begin/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-01-20-begin/</guid><description>usefull tools for linux command line
a. Make terminal cool, install OhMyZsh 1 2 3 4 5 6 7 8 # install zsh sudo apt-get install zsh # ubuntu # change default shell to zsh chsh -s /usr/bin/zsh # install ohmyzsh sh -c &amp;#34;$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&amp;#34; source ~/.zshrc b.</description></item><item><title>Shortcut to bulk RNA-seq analysis</title><link>https://zqfang.github.io/2020-01-20-rnaseq/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-01-20-rnaseq/</guid><description>hisat2-htseq-deseq2
3.1 transcriptom mapping step 0: install tools
1 conda install htseq hisat2 stringtie step 1: build index and extract splice sites
build index
1 2 hisat2-build -p {threads} genome/hg38.fa hisat2_index/hg38 extract known splice sites for alignmnet
1 2 hisat2_extract_splice_sites.py gencode.gtf &amp;gt; hisat2_index/splicesites.txt hisat2_extract_exons.</description></item><item><title>Shortcut to ChIP-seq analysis</title><link>https://zqfang.github.io/2020-01-20-chip/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-01-20-chip/</guid><description>bowtie2-macs2-deeptools
2.1 Genome mapping Step 0: install software
1 2 # install miniconda, then call conda conda install -c bioconda bowtie2 hisat2 samtools deeptools step 1: build index
1 bowtie2-build hg38.fa bowtie2_index/hg38 step 2: mapping
Unpaired data
1 2 3 bowtie2 -p ${threads} -x index/hg38 \ -U input.</description></item><item><title>SuperFast RNA-seq</title><link>https://zqfang.github.io/2020-01-23-rnaseqturbo/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-01-23-rnaseqturbo/</guid><description>salmon-tximport-deseq2
Step 0: install salmon and download transcriptome cdna from gencode 1 2 conda install salmon wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.transcripts.fa.gz Step 1. build salmon index 1 salmon index -p 8 --gencode -t gencode.v32.transcripts.fa.gz -i salmonIndex_hg38 Step 2: quantification 1 2 3 4 salmon quant -i salmonIndex_hg38 -l A \ -1 ${fn}/${samp}_1.</description></item></channel></rss>