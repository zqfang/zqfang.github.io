<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - My Computational Genomic Playground</title><link>https://zqfang.github.io/posts/</link><description>All Posts | My Computational Genomic Playground</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 26 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://zqfang.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Graph Neural Network</title><link>https://zqfang.github.io/2020-07-26-dl-gnn/</link><pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-07-26-dl-gnn/</guid><description>More about Graph Neural Network
Algebra presentation of Graphs 1. Adjacency matrix $$ A_{i j}= \begin{cases} 1 &amp;amp; \text { if }\lbrace v_{i}, v_{j}\rbrace \in E \text { and } i \neq j \cr 0 &amp;amp; \text { otherwise } \end{cases} $$
2. Degree matrix: D is a diagonal matrix, where $$ D_{ii} = d(v_i) $$</description></item><item><title>Geometric Deep Learning</title><link>https://zqfang.github.io/2020-07-25-dl-geometric/</link><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-07-25-dl-geometric/</guid><description>Introduction of Graph Neural Networks
Data Eculidean Structure Data: image, video, voice &amp;hellip; easy to find adjacent neighbors easy to define distance Non-Eculidean data: Graph, Manifold hard to define adjacent neighbors or the numbers of adjacent nodes varies. means hard to define distance, convolution &amp;hellip; Embed (project) Non-Eculidean Data into Eculidean Space using geometric deep learning</description></item><item><title>C++ Notes: Concurrency</title><link>https://zqfang.github.io/2020-07-10-cpp-threading/</link><pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-07-10-cpp-threading/</guid><description><![CDATA[Learn C++11 thread library. Code snippets from Concurrent Programming with C++11
Process vs. Threads Usage Summary A short summary of thread library in STL
 thread and async  1 2 3 4 5 6 7 8  /* thread */ std::thread t1(factorial, 6); // create a new thread std::this_thread::sleep_for(chrono::milliseconds(3)); chrono::steady_clock::time_point tp = chrono::steady_clock::now() + chrono::microseconds(4); std::this_thread::sleep_until(tp); /* async() */ std::future&lt;int&gt; fu = async(factorial, 6); // create a new thread   mutex  1 2 3 4 5 6 7  /* Mutex */ std::mutex mu; std::lock_guard&lt;mutex&gt; locker(mu); std::unique_lock&lt;mutex&gt; ulocker(mu); ulocker.]]></description></item><item><title>ANOVA</title><link>https://zqfang.github.io/2020-06-30-stats-anova/</link><pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-06-30-stats-anova/</guid><description>one-way ANOVA from scratch Calculate the Sum of Squares Total (SST): $$ SS_{total} = \sum_{j=1}^k \sum_{i=1}^l (X_{ij} - \bar{X})^2 $$
Calculate the Sum of Squares Within Groups (SSW): $$ SS_{within} = \sum_{j=1}^k \sum_{i=1}^l (X_{ij} - \bar{X_j})^2 $$
Calculate the Sum of Squares Between Groups (SSB): $$ SS_{between} = \sum_{j=1}^k n_j ( \bar X_{j} - \bar{X}) ^2 $$</description></item><item><title>Survival Analysis</title><link>https://zqfang.github.io/2020-06-22-stats-survival-analysis/</link><pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-06-22-stats-survival-analysis/</guid><description><![CDATA[Censoring Censoring
 Surivial without Censoring Surivial with Censoring  Kaplan Meier Curve More individual in each group, better sepration of the group, better p-value
 Takes censoring into account Estimates probabilitu of &ldquo;survival&rdquo; on a given day Conditional probability of surviving on a given day:  $$ \frac {N_{ \text{&ldquo;alive&rdquo; day before}} - N_{ \text{&ldquo;dying&rdquo; nextday}}} { \text{&ldquo;alive&rdquo; day before}} $$]]></description></item><item><title>NLP concepts</title><link>https://zqfang.github.io/2020-06-20-nlp-basics/</link><pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-06-20-nlp-basics/</guid><description>Basic concepts in NLP
NLP Languwage model MOdels that assigns probabilities to sequences of words are called languwage models.
Count-based Representation one-hot representation
BoW: Bag of words Bow describes the occurrence of words within a document. including
A Vocabulary of known words A measure of the presence of known words, e.</description></item><item><title>Power, Effect size, Sample size</title><link>https://zqfang.github.io/2020-06-14-stats-effectsize/</link><pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-06-14-stats-effectsize/</guid><description>样本量、效应量、显著水平和统计功效的统计原理和计算 效应量通常用三种方式来衡量：标准均差（standa</description></item><item><title>Quantile normalization</title><link>https://zqfang.github.io/2020-06-14-stats-quantile-normalization/</link><pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-06-14-stats-quantile-normalization/</guid><description>Quantile normalization is frequently used in microarray data analysis. It was introduced as quantile standardization and then renamed as quantile normalization.
Quantile, quartile, percentile ??? Quantiles are just the lines that divide data into equally sized groups.
percentiles are just quantiles that divide the data into 100 equally sized groups</description></item><item><title>Multilevel (Hierachical) Models</title><link>https://zqfang.github.io/2020-06-13-stats-hierachial-models/</link><pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-06-13-stats-hierachial-models/</guid><description>What&amp;rsquo;s Multilevel models, and how to deal with it What is multilevel model Multilevel model AKA: multilevel Models random-effects models hierarchical models variance-components models random-coefficient models mixed models Many kinds of data, including observational data collected in the human and biological sciences, have a hierarchical or clustered structure, or non-hierarchical</description></item><item><title>Markov Chain Mento Carlo (MCMC)</title><link>https://zqfang.github.io/2020-01-26-ml-montecarlo/</link><pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-01-26-ml-montecarlo/</guid><description>蒙特卡罗方法，又称统计模拟方法(statistical simulation method), 通过概率模型的随机抽样进行进行近似数值计算</description></item></channel></rss>