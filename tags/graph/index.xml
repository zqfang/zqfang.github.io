<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Graph - Tag - My Computational Genomic Playground</title><link>https://zqfang.github.io/tags/graph/</link><description>Graph - Tag - My Computational Genomic Playground</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 06 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://zqfang.github.io/tags/graph/" rel="self" type="application/rss+xml"/><item><title>Graph Embeding: Node2Vec</title><link>https://zqfang.github.io/2020-12-06-ml-node2vec/</link><pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-12-06-ml-node2vec/</guid><description><![CDATA[Node Embedings are learnt in the same way as word2vec (skip-gram model)
However, graphs could be (un)directed, (un)weighted, (a)cyclic and are basically much more complex than the strucure of a sequence&hellip;
So how do we generate &ldquo;corpus&rdquo; from a graph ?
Sampling strategy Node2vec&rsquo;s sampling strategy accepts 4 argument:
 Number of walks: number of random walks to be generated from each node in the graph Walk length: how many nodes are in each random walk P: return hyperparameter Q: Inout hyperparameter (DFS biased or BFS baised control)  Also, the standard skip-gram parameters]]></description></item><item><title>Graph Neural Network</title><link>https://zqfang.github.io/2020-07-26-dl-gnn/</link><pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-07-26-dl-gnn/</guid><description>More about Graph Neural Network
Algebra presentation of Graphs 1. Adjacency matrix $$ A_{i j}= \begin{cases} 1 &amp;amp; \text { if }\lbrace v_{i}, v_{j}\rbrace \in E \text { and } i \neq j \cr 0 &amp;amp; \text { otherwise } \end{cases} $$
2. Degree matrix: D is a diagonal matrix, where $$ D_{ii} = d(v_i) $$</description></item><item><title>Geometric Deep Learning</title><link>https://zqfang.github.io/2020-07-25-dl-geometric/</link><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-07-25-dl-geometric/</guid><description>Introduction of Graph Neural Networks
Data Eculidean Structure Data: image, video, voice &amp;hellip; easy to find adjacent neighbors easy to define distance Non-Eculidean data: Graph, Manifold hard to define adjacent neighbors or the numbers of adjacent nodes varies. means hard to define distance, convolution &amp;hellip; Embed (project) Non-Eculidean Data into Eculidean Space using geometric deep learning</description></item></channel></rss>