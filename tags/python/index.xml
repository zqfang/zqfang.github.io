<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Python - Tag - My Computational Genomic Playground</title><link>https://zqfang.github.io/tags/python/</link><description>Python - Tag - My Computational Genomic Playground</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 09 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://zqfang.github.io/tags/python/" rel="self" type="application/rss+xml"/><item><title>Priority Queque</title><link>https://zqfang.github.io/2020-02-10-cs-priorityqueue/</link><pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://zqfang.github.io/2020-02-10-cs-priorityqueue/</guid><description>min-heap 1 2 3 4 5 6 7 8 import heapq # create a priorty queque in python, and heapq will ensure the list maintains the heap property. priority_queue = [] # add element. The smallest element will always be at the root, i.e., priority_queue[0]. heapq.heappush(priority_queue, (priority, item)) ## Use heapq.</description></item></channel></rss>